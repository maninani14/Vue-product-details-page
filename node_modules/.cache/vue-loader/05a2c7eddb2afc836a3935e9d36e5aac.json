{"remainingRequest":"/var/www/html/team-practice/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/var/www/html/team-practice/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/team-practice/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/team-practice/src/components/SizeFilter.vue?vue&type=template&id=faa44eee&scoped=true&","dependencies":[{"path":"/var/www/html/team-practice/src/components/SizeFilter.vue","mtime":1548152605740},{"path":"/var/www/html/team-practice/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/team-practice/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/var/www/html/team-practice/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/team-practice/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"hello\" }, [\n    _c(\n      \"div\",\n      { attrs: { id: \"checkboxes\" } },\n      _vm._l(_vm.colors, function(color, index) {\n        return _c(\n          \"div\",\n          { key: index, staticClass: \"form-check form-check-inline\" },\n          [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: color.checked,\n                  expression: \"color.checked\"\n                }\n              ],\n              staticClass: \"form-check-input\",\n              attrs: { type: \"checkbox\" },\n              domProps: {\n                checked: Array.isArray(color.checked)\n                  ? _vm._i(color.checked, null) > -1\n                  : color.checked\n              },\n              on: {\n                change: [\n                  function($event) {\n                    var $$a = color.checked,\n                      $$el = $event.target,\n                      $$c = $$el.checked ? true : false\n                    if (Array.isArray($$a)) {\n                      var $$v = null,\n                        $$i = _vm._i($$a, $$v)\n                      if ($$el.checked) {\n                        $$i < 0 && _vm.$set(color, \"checked\", $$a.concat([$$v]))\n                      } else {\n                        $$i > -1 &&\n                          _vm.$set(\n                            color,\n                            \"checked\",\n                            $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                          )\n                      }\n                    } else {\n                      _vm.$set(color, \"checked\", $$c)\n                    }\n                  },\n                  _vm.getfilteredData\n                ]\n              }\n            }),\n            _c(\"label\", { staticClass: \"form-check-label\" }, [\n              _vm._v(\"\\n            \" + _vm._s(color.value) + \"\\n        \")\n            ])\n          ]\n        )\n      })\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}