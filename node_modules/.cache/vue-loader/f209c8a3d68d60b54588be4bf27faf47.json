{"remainingRequest":"/var/www/html/team-practice/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/team-practice/src/components/SizeFilter.vue?vue&type=style&index=0&id=faa44eee&scoped=true&lang=css&","dependencies":[{"path":"/var/www/html/team-practice/src/components/SizeFilter.vue","mtime":1548152605740},{"path":"/var/www/html/team-practice/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/team-practice/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/var/www/html/team-practice/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/var/www/html/team-practice/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/team-practice/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.component {\n  background-color: lightgreen;\n}\n",{"version":3,"sources":["SizeFilter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA","file":"SizeFilter.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"hello\">\n    <div id=\"checkboxes\">\n      <div  v-for=\"(color,index) in colors\" \n            :key=\"index\" \n            class=\"form-check form-check-inline\">\n        <input  class=\"form-check-input\" type=\"checkbox\" \n                v-model=\"color.checked\" \n                v-on:change=\"getfilteredData\">\n        <label class=\"form-check-label\">\n            {{ color.value }}\n        </label>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { eventBus } from '../main'\nexport default {\n  data() {\n    return {\n      filteredData: [],     \n      colors: [\n        {\n          checked: false,\n          value: 'White'\n        },\n        {\n          checked: false,\n          value: 'Red'\n        },\n        {\n          checked: false,\n          value: 'Blue'\n        },\n        {\n          checked: false,\n          value: 'Black'\n        }\n      ]\n    };\n  },\n  computed: {\n  selectedFilters() {\n    let filters = [];\n    let checkedFiters = this.colors.filter(obj => obj.checked);\n    checkedFiters.forEach(element => {\n      filters.push(element.value);\n          });\n    return filters;\n  }\n  },\n  props: {\n          apiData: Array,\n      },\n  methods: {\n      getfilteredData(){            \n          this.filteredData = this.apiData;\n          let filteredDataByfilters = [];\n          if (this.selectedFilters.length <= 0) {\n              eventBus.$emit('dataModified', this.filteredData)\n          }\n    // first check if filters where selected\n    if (this.selectedFilters.length > 0) {\n              filteredDataByfilters= this.filteredData.filter(obj => \n                          this.selectedFilters.filter(val => \n                              obj.color.indexOf(val) >= 0).length != 0);\n              this.filteredData = filteredDataByfilters;\n              eventBus.$emit('dataModified', this.filteredData)\n    }             \n      }\n  },\n  mounted(){\n      this.getfilteredData()\n  }\n}\n</script>\n\n<style scoped>\n.component {\n  background-color: lightgreen;\n}\n</style>\n"]}]}